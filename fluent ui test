local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()

local Window = Library:CreateWindow{
    Title = `ko`,
    SubTitle = "test1",
    TabWidth = 160,
    Size = UDim2.fromOffset(830, 525),
    Resize = true, -- Resize this ^ Size according to a 1920x1080 screen, good for mobile users but may look weird on some devices
    MinSize = Vector2.new(470, 380),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl -- Used when theres no MinimizeKeybind
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Main",
        Icon = "nil"
    }
}

local Paragraph = Tabs.Main:CreateParagraph("Paragraph", {
    Title = "Client Time",  -- The title of the paragraph
    Content = "0h:0m:0s"    -- Initial content, starting at 0 hours, 0 minutes, 0 seconds
})

-- Function to update the time dynamically like a clock
task.spawn(function()
    local startTime = tick()  -- Get the current time in seconds since the game started

    while true do
        local elapsed = tick() - startTime  -- Calculate the time elapsed since start
        local hours = math.floor(elapsed / 3600)  -- Get hours
        local minutes = math.floor((elapsed % 3600) / 60)  -- Get minutes
        local seconds = math.floor(elapsed % 60)  -- Get seconds

        -- Format the time as "Xh:Xm:Xs"
        local formattedTime = string.format("%dh:%dm:%ds", hours, minutes, seconds)

        -- Update the content of the paragraph
        Paragraph:SetValue(formattedTime)

        wait(1)  -- Wait for 1 second before updating the time again
    end
end)

-- Create the "Wall Status" paragraph UI with initial title
local Paragraph = Tabs.Main:CreateParagraph("Paragraph", {
    Title = "Bar Status: ",  -- Initial title with red status (no wall detected)
    Content = ""  -- Empty content since you only want the title to change
})

-- Function to check if the "Wall" part exists in the Workspace
task.spawn(function()
    while true do
        -- Look for a part named "Wall" in the Workspace
        local barPart = game.Workspace:FindFirstChild("Bar")

        -- If the "Wall" part exists, update the title to green status
        if barPart then
            Paragraph:SetValue("Bar Status: ðŸŸ¢")  -- Change title to green
        else
            -- If the "Wall" part doesn't exist, update the title to red status
            Paragraph:SetValue("Bar Status: ðŸ”´")  -- Change title to red
        end

        wait(1)  -- Check every 1 second
    end
end)

-- Create the "Bar Status" paragraph UI with initial title and content
local BarParagraph = Tabs.Main:CreateParagraph("BarStatus", {
    Title = "Bar Status: ðŸ”´",  -- Initial title with red status
    Content = "ðŸ”´"  -- Initial content, but will update as needed
})

-- Function to check if the "Bar" part exists in the Workspace and update the content
task.spawn(function()
    while true do
        -- Look for a part named "Bar" in the Workspace
        local barPart = game.Workspace:FindFirstChild("Bar")

        -- If the "Bar" part exists, update the content to green status
        if barPart then
            BarParagraph:SetValue("ðŸŸ¢")  -- Only update content
            BarParagraph:SetTitle("Bar Status: ðŸŸ¢")  -- You can try updating title if it works
        else
            -- If the "Bar" part doesn't exist, update the content to red status
            BarParagraph:SetValue("ðŸ”´")  -- Only update content
            BarParagraph:SetTitle("Bar Status: ðŸ”´")  -- You can try updating title if it works
        end

        wait(1)  -- Check every 1 second
    end
end)
